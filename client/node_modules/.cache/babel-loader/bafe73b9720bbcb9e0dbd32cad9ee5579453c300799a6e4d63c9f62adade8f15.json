{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oona\\\\Documents\\\\Koulu_setit\\\\Full Stack\\\\Fullstack-project2\\\\fullstack-project2\\\\client\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetData = () => {\n  _s();\n  const [quotes, setQuotes] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:3030/api/getall\").then(results => {\n      return results.json();\n    }).then(data => {\n      console.log(data.tracks);\n      setQuotes(data.tracks);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: quotes ? /*#__PURE__*/_jsxDEV(QuoteArray, {\n      quotes: quotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Nothing here.Fething data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false) // fragmenttien lopetustägi\n  ;\n};\n_s(GetData, \"0VPHYiRtcA6KwZuiqIU2apflnVw=\");\n_c = GetData;\nconst QuoteArray = props => {\n  const {\n    data\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.quote, \" ( \", item.author, \" )\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c2 = QuoteArray;\nReactDOM.render( /*#__PURE__*/_jsxDEV(GetData, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\nvar _c, _c2;\n$RefreshReg$(_c, \"GetData\");\n$RefreshReg$(_c2, \"QuoteArray\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","GetData","_s","quotes","setQuotes","fetch","then","results","json","data","console","log","tracks","children","QuoteArray","fileName","_jsxFileName","lineNumber","columnNumber","_c","props","map","item","quote","author","_c2","render","document","getElementById","$RefreshReg$"],"sources":["C:/Users/Oona/Documents/Koulu_setit/Full Stack/Fullstack-project2/fullstack-project2/client/src/index.js"],"sourcesContent":["import React, { useState, useEffect }  from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport './index.css';\n\nconst GetData = () => {\n  const [quotes, setQuotes] = useState(null)\n  useEffect(() => {\n    fetch(\"http://localhost:3030/api/getall\")\n      .then((results) => {\n        return results.json();\n      })\n      .then((data) => {\n        console.log(data.tracks)\n        setQuotes(data.tracks)\n      });\n  }, [])\n\n  return (\n    <> \n      {\n        quotes ?\n          <QuoteArray quotes={quotes} />\n          : <div>Nothing here.Fething data...</div>\n      }\n    </> // fragmenttien lopetustägi\n  );\n}\n\n\n\nconst QuoteArray = (props) => {\n  const { data } = props;\n\n  return (\n    <div>\n      <ul>\n        {data.map((item) => (\n          <li>\n            {item.quote} ( {item.author} )\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\n\n\n\nReactDOM.render(<GetData />, document.getElementById(\"root\"));\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAS,OAAO;AACnD,OAAOC,QAAQ,MAAM,WAAW;AAEhC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1CC,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,OAAO,IAAK;MACjB,OAAOA,OAAO,CAACC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,MAAM,CAAC;MACxBR,SAAS,CAACK,IAAI,CAACG,MAAM,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,EAEIV,MAAM,gBACJL,OAAA,CAACgB,UAAU;MAACX,MAAM,EAAEA;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAC5BpB,OAAA;MAAAe,QAAA,EAAK;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAE7C,CAAC,CAAC;EAAA;AAER,CAAC;AAAAhB,EAAA,CAtBKD,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AA0Bb,MAAMa,UAAU,GAAIM,KAAK,IAAK;EAC5B,MAAM;IAAEX;EAAK,CAAC,GAAGW,KAAK;EAEtB,oBACEtB,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAAe,QAAA,EACGJ,IAAI,CAACY,GAAG,CAAEC,IAAI,iBACbxB,OAAA;QAAAe,QAAA,GACGS,IAAI,CAACC,KAAK,EAAC,KAAG,EAACD,IAAI,CAACE,MAAM,EAAC,IAC9B;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACO,GAAA,GAdIX,UAAU;AAoBhBlB,QAAQ,CAAC8B,MAAM,eAAC5B,OAAA,CAACG,OAAO;EAAAc,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAES,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAAC,IAAAT,EAAA,EAAAM,GAAA;AAAAI,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAJ,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}